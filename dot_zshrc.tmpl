# history
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

# options
setopt EXTENDED_HISTORY HIST_FIND_NO_DUPS HIST_IGNORE_SPACE INC_APPEND_HISTORY_TIME
setopt AUTO_CD AUTO_PUSHD PUSHD_MINUS
setopt AUTO_MENU ALWAYS_TO_END
cdpath=("$HOME/Projects")

# vi mode
bindkey -v

# completion
zstyle :compinstall filename "$HOME/.zshrc"
autoload -Uz compinit
compinit

# starship
eval "$(starship init zsh)"

# aliases
alias cp='cp -i'
alias df='df -h'
alias free='free -m'
alias ls='lsd --hyperlink=auto'
alias l='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias lt='ls --tree'
[[ -x $(whence batcat) ]] && alias bat='batcat'
alias cat='bat --paging=never'
alias icat="kitty +kitten icat"
alias s='kitty +kitten ssh'
alias hg="kitty +kitten hyperlinked_grep"

{{- if contains "maxar" .chezmoi.fqdnHostname }}

function s2a() {
  export AWS_PROFILE=$1
  export DEPLOY_ENV=${1##*-}
  saml2aws -a $1 login ${@:2}
}
{{- else }}

alias wake_hoid="wol d4:5d:64:f1:42:02"
alias rdp_wit="xfreerdp +clipboard /v:wit.lan /u:adam.j.cook@pm.me /sound"
{{- end }}

# restic
export RESTIC_REPOSITORY='{{ (index (bitwarden "item" "restic").login.uris 0).uri }}'
export RESTIC_PASSWORD_COMMAND="bw get password restic"

# fuzzy search
if [ -f /usr/share/fzf/completion.zsh ]; then
  source /usr/share/fzf/completion.zsh
elif [ -f /usr/local/opt/fzf/shell/completion.zsh ]; then
  source /usr/local/opt/fzf/shell/completion.zsh
fi

if [ -f /usr/share/fzf/key-bindings.zsh ]; then
  source /usr/share/fzf/key-bindings.zsh
elif [ -f /usr/share/doc/fzf/examples/key-bindings.zsh ]; then
  source /usr/share/doc/fzf/examples/key-bindings.zsh
elif [ -f /usr/local/opt/fzf/shell/key-bindings.zsh ]; then
  source /usr/local/opt/fzf/shell/key-bindings.zsh
fi

# fish like
if [ -f /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
elif [ -f /usr/local/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /usr/local/zsh-autosuggestions/zsh-autosuggestions.zsh
fi
if [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
elif [ -f /usr/local/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /usr/local/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# gnupg
export GPG_TTY=$(tty)

# software versions
[[ -x $(whence jenv) ]] && eval "$(jenv init -)"
[[ -x $(whence pyenv) ]] && eval "$(pyenv init -)"
[[ -x $(whence luarocks) ]] && eval "$(luarocks path --no-bin)"

# k8s
[[ -x $(whence kubectl) ]] && source <(kubectl completion zsh)
[[ -x $(whence helm) ]] && source <(helm completion zsh)
[[ -x $(whence flux) ]] && source <(flux completion zsh) && compdef _flux flux
[[ -x $(whence saml2aws) ]] && eval "$(saml2aws --completion-script-zsh)"
